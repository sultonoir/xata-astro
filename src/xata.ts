// Generated by Xata Codegen 0.28.2. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "User",
    columns: [
      { name: "email", type: "email", unique: true },
      { name: "imageUrl", type: "file", file: { defaultPublicAccess: true } },
      { name: "name", type: "string" },
      { name: "hashedPassword", type: "string" },
    ],
  },
  {
    name: "post",
    columns: [
      { name: "title", type: "string" },
      { name: "slug", type: "string" },
      { name: "description", type: "text" },
      { name: "pubDate", type: "datetime" },
    ],
  },
  {
    name: "Projects",
    columns: [
      { name: "name", type: "string", unique: true },
      { name: "projectUrl", type: "string" },
      {
        name: "imageUrl",
        type: "file[]",
        "file[]": { defaultPublicAccess: true },
      },
      { name: "sumary", type: "text" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type User = InferredTypes["User"];
export type UserRecord = User & XataRecord;

export type Post = InferredTypes["post"];
export type PostRecord = Post & XataRecord;

export type Projects = InferredTypes["Projects"];
export type ProjectsRecord = Projects & XataRecord;

export type DatabaseSchema = {
  User: UserRecord;
  post: PostRecord;
  Projects: ProjectsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Sulton-s-workspace-4sbl61.ap-southeast-2.xata.sh/db/sultonoir-astro",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
